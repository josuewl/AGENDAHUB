// <auto-generated />
using System;
using AGENDAHUB.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AGENDAHUB.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240530030039_NewDb")]
    partial class NewDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AGENDAHUB.Models.Agendamento", b =>
                {
                    b.Property<int>("IdAgendamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgendamento"), 1L, 1);

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdProfissional")
                        .HasColumnType("int");

                    b.Property<int>("IdServico")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdAgendamento");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdProfissional");

                    b.HasIndex("IdServico");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Caixa", b =>
                {
                    b.Property<int>("ID_Caixa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Caixa"), 1L, 1);

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ID_Agendamento")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID_Caixa");

                    b.HasIndex("ID_Agendamento")
                        .IsUnique()
                        .HasFilter("[ID_Agendamento] IS NOT NULL");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Caixa");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdCliente");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Configuracao", b =>
                {
                    b.Property<int>("ID_Configuracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Configuracao"), 1L, 1);

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiasDaSemanaJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HoraFim")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<string>("NomeEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID_Configuracao");

                    b.HasIndex("UsuarioID")
                        .IsUnique();

                    b.ToTable("Configuracao");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Profissional", b =>
                {
                    b.Property<int>("ID_Profissional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Profissional"), 1L, 1);

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Cargo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID_Profissional");

                    b.HasIndex("UsuarioID")
                        .IsUnique();

                    b.ToTable("Profissionais");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Servico", b =>
                {
                    b.Property<int>("ID_Servico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Servico"), 1L, 1);

                    b.Property<byte[]>("Imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProfissionalID_Profissional")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TempoDeExecucao")
                        .HasColumnType("time");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID_Servico");

                    b.HasIndex("ProfissionalID_Profissional");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("AGENDAHUB.Models.ServicoProfissional", b =>
                {
                    b.Property<int>("ID_Servico")
                        .HasColumnType("int");

                    b.Property<int>("ID_Profissional")
                        .HasColumnType("int");

                    b.HasKey("ID_Servico", "ID_Profissional");

                    b.HasIndex("ID_Profissional");

                    b.ToTable("ServicoProfissional");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NomeUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Agendamento", b =>
                {
                    b.HasOne("AGENDAHUB.Models.Cliente", "Cliente")
                        .WithMany("Agendamento")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AGENDAHUB.Models.Profissional", "Profissional")
                        .WithMany("Agendamento")
                        .HasForeignKey("IdProfissional")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AGENDAHUB.Models.Servico", "Servico")
                        .WithMany("Agendamento")
                        .HasForeignKey("IdServico")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AGENDAHUB.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Profissional");

                    b.Navigation("Servico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Caixa", b =>
                {
                    b.HasOne("AGENDAHUB.Models.Agendamento", "Agendamento")
                        .WithOne("Caixa")
                        .HasForeignKey("AGENDAHUB.Models.Caixa", "ID_Agendamento");

                    b.HasOne("AGENDAHUB.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendamento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Cliente", b =>
                {
                    b.HasOne("AGENDAHUB.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Configuracao", b =>
                {
                    b.HasOne("AGENDAHUB.Models.Usuario", "Usuario")
                        .WithOne("Configuracao")
                        .HasForeignKey("AGENDAHUB.Models.Configuracao", "UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Profissional", b =>
                {
                    b.HasOne("AGENDAHUB.Models.Usuario", "Usuario")
                        .WithOne("Profissionais")
                        .HasForeignKey("AGENDAHUB.Models.Profissional", "UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Servico", b =>
                {
                    b.HasOne("AGENDAHUB.Models.Profissional", null)
                        .WithMany("Servicos")
                        .HasForeignKey("ProfissionalID_Profissional");

                    b.HasOne("AGENDAHUB.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AGENDAHUB.Models.ServicoProfissional", b =>
                {
                    b.HasOne("AGENDAHUB.Models.Profissional", "Profissional")
                        .WithMany("ServicosProfissionais")
                        .HasForeignKey("ID_Profissional")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AGENDAHUB.Models.Servico", "Servico")
                        .WithMany("ServicosProfissionais")
                        .HasForeignKey("ID_Servico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profissional");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Agendamento", b =>
                {
                    b.Navigation("Caixa");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Cliente", b =>
                {
                    b.Navigation("Agendamento");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Profissional", b =>
                {
                    b.Navigation("Agendamento");

                    b.Navigation("Servicos");

                    b.Navigation("ServicosProfissionais");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Servico", b =>
                {
                    b.Navigation("Agendamento");

                    b.Navigation("ServicosProfissionais");
                });

            modelBuilder.Entity("AGENDAHUB.Models.Usuario", b =>
                {
                    b.Navigation("Configuracao");

                    b.Navigation("Profissionais");
                });
#pragma warning restore 612, 618
        }
    }
}
